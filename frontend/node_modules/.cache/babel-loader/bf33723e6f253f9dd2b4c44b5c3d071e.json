{"ast":null,"code":"var _jsxFileName = \"C:\\\\study projects\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState(null);\n  React.useEffect(() => {\n    api.getUserInfo().then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards()]).then(_ref => {\n      let [initialCards] = _ref;\n      setCards(initialCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupState(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupState(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupState(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupState(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupState(false);\n    setEditProfilePopupState(false);\n    setAddPlacePopupState(false);\n    setImagePopupState(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    api.updateUserInfo(name, about).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(_ref3) {\n    let {\n      url\n    } = _ref3;\n    api.changeAvatar(url).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    });\n  }\n\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      url\n    } = _ref4;\n    api.putNewImage(name, url).then(items => {\n      setCards([items, ...cards]);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root__container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          name: \"are_you-sure\",\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups,\n          isOpen: isImagePopupOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"L+WhSYitin8QQn5Kq04K2gp964I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/study projects/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setEditProfilePopupState","useState","isAddPlacePopupOpen","setAddPlacePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","isImagePopupOpen","setImagePopupState","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","useEffect","getUserInfo","then","userInfo","catch","err","console","log","Promise","all","getInitialCards","initialCards","handleCardLike","card","isLiked","likes","some","i","_id","addLike","newCard","state","map","c","removeLike","handleCardDelete","removeCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","name","about","updateUserInfo","info","handleUpdateAvatar","url","changeAvatar","handleAddPlaceSubmit","putNewImage","items"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupState] = React.useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n    const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [cards, setCards] = React.useState([]);\n\n    const [currentUser, setCurrentUser] = React.useState(null);\n\n    React.useEffect(() => {\n        api.getUserInfo().then(( userInfo) => {\n            setCurrentUser(userInfo);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    React.useEffect(() => {\n        Promise.all([api.getInitialCards()]).then(([initialCards]) => {\n            setCards(initialCards);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if(!isLiked){\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.addLike(card._id).then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            });\n        } else {\n            api.removeLike(card._id).then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            });\n        }\n    }\n\n    function handleCardDelete(card){\n        api.removeCard(card._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== card._id));\n        });\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupState(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupState(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupState(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setImagePopupState(true);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupState(false);\n        setEditProfilePopupState(false);\n        setAddPlacePopupState(false);\n        setImagePopupState(false);\n        setSelectedCard(null);\n    }\n\n    function handleUpdateUser({name, about}){\n        api.updateUserInfo(name, about).then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        });\n    }\n\n    function handleUpdateAvatar({url}){\n        api.changeAvatar(url).then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        })\n    }\n\n    function handleAddPlaceSubmit({name, url}){\n        api.putNewImage(name, url).then((items) => {\n            setCards([items, ...cards]);\n        });\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"root\">\n            <div className=\"root__container\">\n                <Header/>\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n                <Footer/>\n\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\n\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\n\n                <PopupWithForm title=\"Вы уверены?\" name=\"are_you-sure\" onClose={closeAllPopups}/>\n\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} isOpen={isImagePopupOpen}/>\n            </div>\n        </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}