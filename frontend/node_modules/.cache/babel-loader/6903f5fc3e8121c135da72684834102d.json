{"ast":null,"code":"var _jsxFileName = \"C:\\\\study projects\\\\react-mesto-auth\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // этот компонент принимает другой компонент в качестве пропса\n// он также может взять неограниченное число пропсов и передать их новому компоненту\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  let {\n    loggedIn,\n    children,\n    path\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    children: () => props.loggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"./sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/study projects/react-mesto-auth/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","loggedIn","children","path","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;;;;AACA,MAAMC,cAAc,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAAiC;AACrD,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,IAAb;AAAA,cACK,MACGC,KAAK,CAACH,QAAN,gBAAiB,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAA4C,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFpD;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;KAAMJ,c;AAUN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\nconst ProtectedRoute = ({ loggedIn, children, path }) => {\r\n    return (\r\n        <Route path={path}>\r\n            {() =>\r\n                props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n            }\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}