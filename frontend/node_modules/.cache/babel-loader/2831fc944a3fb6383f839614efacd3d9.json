{"ast":null,"code":"var _jsxFileName = \"C:\\\\study projects\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport RegisterButton from \"./RegisterButton\";\nimport LoginButton from \"./LoginButton\";\nimport { authorize, checkTokenValidity, register } from \"../utils/authorization\";\nimport AuthorizedHeader from \"./AuthorizedHeader\";\nimport InfoPopup from \"./InfoPopup\";\nimport stateOkImg from \"../images/ok.svg\";\nimport stateErrorImg from \"../images/not_ok.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [isInfoPopupOpen, setInfoPopupState] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false); // признак авторизованности пользователя\n\n  const {\n    history\n  } = props;\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards(), api.getUserInfo()]).then(_ref => {\n      let [initialCards, userInfo] = _ref;\n      setCurrentUser(userInfo);\n      setCards(initialCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  /*React.useEffect(() => {\n      if (isLoggedIn) {\n          history.push(\"/\")\n      }\n  }, [isLoggedIn]);*/\n\n  React.useEffect(() => {\n    checkToken();\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupState(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupState(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupState(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupState(false);\n    setEditProfilePopupState(false);\n    setAddPlacePopupState(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    api.updateUserInfo(name, about).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(_ref3) {\n    let {\n      url\n    } = _ref3;\n    api.changeAvatar(url).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      url\n    } = _ref4;\n    api.addCard(name, url).then(item => {\n      setCards([item, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleRegister(password, email) {\n    register(password, email).then(() => {\n      console.log('in register');\n      setIsLoggedIn(true);\n      choosingPopup(true);\n      setInfoPopupState(true); // history.push(\"/\");\n    }).catch(() => {\n      console.log('in register');\n      choosingPopup(false);\n      setInfoPopupState(true);\n    });\n  }\n\n  function handleAuthorization(password, email) {\n    authorize(password, email).then(res => {\n      setIsLoggedIn(true);\n      localStorage.setItem('token', res.token);\n      history.push(\"/\");\n    }).catch(() => {\n      choosingPopup(false);\n      setInfoPopupState(true);\n    });\n  }\n\n  function checkToken() {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      checkTokenValidity(token).then(res => {\n        setEmail(res.data.email);\n        setIsLoggedIn(true);\n        history.push(\"/\");\n      }).catch(() => {\n        setIsLoggedIn(false);\n        history.push(\"/sign-in\");\n      });\n    }\n  }\n\n  function handleClick(path) {\n    history.push(`${path}`);\n  }\n\n  function handleLogout(path) {\n    handleClick(path);\n    setIsLoggedIn(false);\n    localStorage.removeItem('token');\n  }\n\n  function choosingPopup(state) {\n    console.log(typeof state);\n\n    if (state === true) {\n      RenderPopup( /*#__PURE__*/_jsxDEV(InfoPopup, {\n        isOpen: isInfoPopupOpen,\n        src: stateOkImg,\n        text: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\",\n        name: \"info-popup\",\n        onClose: handleCloseInfotipPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 26\n      }, this));\n    } else {\n      RenderPopup( /*#__PURE__*/_jsxDEV(InfoPopup, {\n        isOpen: isInfoPopupOpen,\n        src: stateErrorImg,\n        text: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\",\n        name: \"info-popup\",\n        onClose: handleCloseInfotipPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this));\n    }\n  }\n\n  function RenderPopup(component) {\n    if (component) {\n      console.log(111);\n    }\n  }\n\n  function handleCloseInfotipPopup() {\n    setInfoPopupState(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root__container\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sign-up\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(RegisterButton, {\n              path: \"/sign-in\",\n              onClick: handleClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Register, {\n              onHandleSubmit: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(RenderPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sign-in\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n              path: \"/sign-up\",\n              onClick: handleClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Login, {\n              onHandleSubmit: handleAuthorization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InfoPopup, {\n              isOpen: isInfoPopupOpen,\n              src: stateOkImg,\n              text: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\",\n              name: \"info-popup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: isLoggedIn,\n            children: [/*#__PURE__*/_jsxDEV(AuthorizedHeader, {\n              email: email,\n              path: \"/sign-in\",\n              onClick: handleLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Main, {\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              cards: cards,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser,\n          submitBtnName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit,\n          submitBtnName: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          name: \"are_you-sure\",\n          onClose: closeAllPopups,\n          submitBtnName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar,\n          submitBtnName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"odHJu7Eiwj87MZdbJwkfYDvmmUo=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/study projects/react-mesto-auth/src/components/App.js"],"names":["React","Redirect","Route","Switch","withRouter","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Register","Login","RegisterButton","LoginButton","authorize","checkTokenValidity","register","AuthorizedHeader","InfoPopup","stateOkImg","stateErrorImg","App","props","isEditProfilePopupOpen","setEditProfilePopupState","useState","isAddPlacePopupOpen","setAddPlacePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","isInfoPopupOpen","setInfoPopupState","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","email","setEmail","isLoggedIn","setIsLoggedIn","history","useEffect","Promise","all","getInitialCards","getUserInfo","then","initialCards","userInfo","catch","err","console","log","checkToken","handleCardLike","card","isLiked","likes","some","i","_id","addLike","newCard","state","map","c","removeLike","handleCardDelete","removeCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","name","about","updateUserInfo","info","handleUpdateAvatar","url","changeAvatar","handleAddPlaceSubmit","addCard","item","handleRegister","password","choosingPopup","handleAuthorization","res","localStorage","setItem","token","push","getItem","data","handleClick","path","handleLogout","removeItem","RenderPopup","handleCloseInfotipPopup","component"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,UAAjC,QAAkD,kBAAlD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,SAAR,EAAmBC,kBAAnB,EAAuCC,QAAvC,QAAsD,wBAAtD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM,CAACC,sBAAD,EAAyBC,wBAAzB,IAAqD9B,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAA3D;AACA,QAAM,CAACC,mBAAD,EAAsBC,qBAAtB,IAA+CjC,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAArD;AACA,QAAM,CAACG,qBAAD,EAAwBC,uBAAxB,IAAmDnC,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAAzD;AACA,QAAM,CAACK,eAAD,EAAkBC,iBAAlB,IAAuCrC,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAA7C;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCvC,KAAK,CAAC+B,QAAN,CAAe,IAAf,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBzC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAA1B;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgC3C,KAAK,CAAC+B,QAAN,CAAe,IAAf,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoB7C,KAAK,CAAC+B,QAAN,CAAe,IAAf,CAA1B;AAEA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8B/C,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAApC,CAZgB,CAY2C;;AAE3D,QAAM;AAACiB,IAAAA;AAAD,MAAYpB,KAAlB;AAEA5B,EAAAA,KAAK,CAACiD,SAAN,CAAgB,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACzC,GAAG,CAAC0C,eAAJ,EAAD,EAAwB1C,GAAG,CAAC2C,WAAJ,EAAxB,CAAZ,EAAwDC,IAAxD,CAA6D,QAA8B;AAAA,UAA7B,CAACC,YAAD,EAAeC,QAAf,CAA6B;AACvFb,MAAAA,cAAc,CAACa,QAAD,CAAd;AACAf,MAAAA,QAAQ,CAACc,YAAD,CAAR;AACH,KAHD,EAGGE,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALD;AAMH,GAPD,EAOG,EAPH;AASA;AACJ;AACA;AACA;AACA;;AAEI1D,EAAAA,KAAK,CAACiD,SAAN,CAAgB,MAAM;AAClBY,IAAAA,UAAU;AACb,GAFD,EAEG,EAFH;;AAIA,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAU1B,WAAW,CAAC0B,GAA3C,CAAhB;;AACA,QAAI,CAACJ,OAAL,EAAc;AACV;AACAtD,MAAAA,GAAG,CAAC2D,OAAJ,CAAYN,IAAI,CAACK,GAAjB,EAAsBd,IAAtB,CAA4BgB,OAAD,IAAa;AACpC7B,QAAAA,QAAQ,CAAE8B,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAhD,CAAZ,CAAR;AACH,OAFD,EAEGhB,KAFH,CAEUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJD;AAKH,KAPD,MAOO;AACHhD,MAAAA,GAAG,CAACgE,UAAJ,CAAeX,IAAI,CAACK,GAApB,EAAyBd,IAAzB,CAA+BgB,OAAD,IAAa;AACvC7B,QAAAA,QAAQ,CAAE8B,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAhD,CAAZ,CAAR;AACH,OAFD,EAEGhB,KAFH,CAEUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJD;AAKH;AACJ;;AAED,WAASiB,gBAAT,CAA0BZ,IAA1B,EAAgC;AAC5BrD,IAAAA,GAAG,CAACkE,UAAJ,CAAeb,IAAI,CAACK,GAApB,EAAyBd,IAAzB,CAA8B,MAAM;AAChCb,MAAAA,QAAQ,CAAE8B,KAAD,IAAWA,KAAK,CAACM,MAAN,CAAcJ,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAnC,CAAZ,CAAR;AACH,KAFD,EAEGX,KAFH,CAEUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAJD;AAKH;;AAED,WAASoB,qBAAT,GAAiC;AAC7B3C,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;;AAED,WAAS4C,sBAAT,GAAkC;AAC9BjD,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAED,WAASkD,mBAAT,GAA+B;AAC3B/C,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;;AAED,WAASgD,eAAT,CAAyBlB,IAAzB,EAA+B;AAC3BxB,IAAAA,eAAe,CAACwB,IAAD,CAAf;AACH;;AAED,WAASmB,cAAT,GAA0B;AACtB/C,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAL,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAG,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAM,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH;;AAED,WAAS4C,gBAAT,QAAyC;AAAA,QAAf;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAe;AACrC3E,IAAAA,GAAG,CAAC4E,cAAJ,CAAmBF,IAAnB,EAAyBC,KAAzB,EAAgC/B,IAAhC,CAAsCiC,IAAD,IAAU;AAC3C5C,MAAAA,cAAc,CAAC4C,IAAD,CAAd;AACAL,MAAAA,cAAc;AACjB,KAHD,EAGGzB,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALD;AAMH;;AAED,WAAS8B,kBAAT,QAAmC;AAAA,QAAP;AAACC,MAAAA;AAAD,KAAO;AAC/B/E,IAAAA,GAAG,CAACgF,YAAJ,CAAiBD,GAAjB,EAAsBnC,IAAtB,CAA4BiC,IAAD,IAAU;AACjC5C,MAAAA,cAAc,CAAC4C,IAAD,CAAd;AACAL,MAAAA,cAAc;AACjB,KAHD,EAGGzB,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALD;AAMH;;AAED,WAASiC,oBAAT,QAA2C;AAAA,QAAb;AAACP,MAAAA,IAAD;AAAOK,MAAAA;AAAP,KAAa;AACvC/E,IAAAA,GAAG,CAACkF,OAAJ,CAAYR,IAAZ,EAAkBK,GAAlB,EAAuBnC,IAAvB,CAA6BuC,IAAD,IAAU;AAClCpD,MAAAA,QAAQ,CAAC,CAACoD,IAAD,EAAO,GAAGrD,KAAV,CAAD,CAAR;AACA0C,MAAAA,cAAc;AACjB,KAHD,EAGGzB,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALD;AAMH;;AAED,WAASoC,cAAT,CAAwBC,QAAxB,EAAkCnD,KAAlC,EAAyC;AACrCtB,IAAAA,QAAQ,CAACyE,QAAD,EAAWnD,KAAX,CAAR,CAA0BU,IAA1B,CAA+B,MAAM;AACjCK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAb,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAiD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA3D,MAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAJiC,CAKjC;AACH,KAND,EAMGoB,KANH,CAMS,MAAM;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAoC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA3D,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,KAVD;AAWH;;AAED,WAAS4D,mBAAT,CAA6BF,QAA7B,EAAuCnD,KAAvC,EAA8C;AAC1CxB,IAAAA,SAAS,CAAC2E,QAAD,EAAWnD,KAAX,CAAT,CAA2BU,IAA3B,CAAiC4C,GAAD,IAAS;AACrCnD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAoD,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,KAAlC;AACArD,MAAAA,OAAO,CAACsD,IAAR,CAAa,GAAb;AACH,KAJD,EAIG7C,KAJH,CAIS,MAAM;AACXuC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA3D,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,KAPD;AAQH;;AAED,WAASwB,UAAT,GAAsB;AAClB,UAAMwC,KAAK,GAAGF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACPhF,MAAAA,kBAAkB,CAACgF,KAAD,CAAlB,CAA0B/C,IAA1B,CAAgC4C,GAAD,IAAS;AACpCrD,QAAAA,QAAQ,CAACqD,GAAG,CAACM,IAAJ,CAAS5D,KAAV,CAAR;AACAG,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,QAAAA,OAAO,CAACsD,IAAR,CAAa,GAAb;AACH,OAJD,EAIG7C,KAJH,CAIS,MAAM;AACXV,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,QAAAA,OAAO,CAACsD,IAAR,CAAa,UAAb;AACH,OAPD;AAQH;AACJ;;AAED,WAASG,WAAT,CAAqBC,IAArB,EAA2B;AACvB1D,IAAAA,OAAO,CAACsD,IAAR,CAAc,GAAEI,IAAK,EAArB;AACH;;AAED,WAASC,YAAT,CAAsBD,IAAtB,EAA4B;AACxBD,IAAAA,WAAW,CAACC,IAAD,CAAX;AACA3D,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAoD,IAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACH;;AAED,WAASZ,aAAT,CAAuBzB,KAAvB,EAA8B;AAC1BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOW,KAAnB;;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChBsC,MAAAA,WAAW,eAAE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEzE,eAAnB;AAAoC,QAAA,GAAG,EAAEX,UAAzC;AAAqD,QAAA,IAAI,EAAC,uKAA1D;AACM,QAAA,IAAI,EAAC,YADX;AACwB,QAAA,OAAO,EAAEqF;AADjC;AAAA;AAAA;AAAA;AAAA,cAAF,CAAX;AAEH,KAHD,MAGO;AACHD,MAAAA,WAAW,eACP,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEzE,eAAnB;AAAoC,QAAA,GAAG,EAAEV,aAAzC;AACW,QAAA,IAAI,EAAC,qMADhB;AAEW,QAAA,IAAI,EAAC,YAFhB;AAE6B,QAAA,OAAO,EAAEoF;AAFtC;AAAA;AAAA;AAAA;AAAA,cADO,CAAX;AAIH;AACJ;;AAED,WAASD,WAAT,CAAqBE,SAArB,EAA+B;AAC3B,QAAGA,SAAH,EAAa;AACTpD,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;AACJ;;AAED,WAASkD,uBAAT,GAAkC;AAC9BzE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;;AAGD,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEK,WAApC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,UAAlB;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAC,UAArB;AAAgC,cAAA,OAAO,EAAE+D;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,QAAD;AAAU,cAAA,cAAc,EAAEX;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,UAAlB;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,WAAD;AAAa,cAAA,IAAI,EAAC,UAAlB;AAA6B,cAAA,OAAO,EAAEW;AAAtC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,cAAc,EAAER;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,SAAD;AAAW,cAAA,MAAM,EAAE7D,eAAnB;AAAoC,cAAA,GAAG,EAAEX,UAAzC;AAAqD,cAAA,IAAI,EAAC,uKAA1D;AACW,cAAA,IAAI,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAcI,QAAC,cAAD;AACI,YAAA,IAAI,EAAC,GADT;AAEI,YAAA,QAAQ,EAAEqB,UAFd;AAAA,oCAGI,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAEF,KAAzB;AAAgC,cAAA,IAAI,EAAE,UAAtC;AAAkD,cAAA,OAAO,EAAE+D;AAA3D;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,IAAD;AACI,cAAA,aAAa,EAAE5B,sBADnB;AAEI,cAAA,UAAU,EAAEC,mBAFhB;AAGI,cAAA,YAAY,EAAEF,qBAHlB;AAII,cAAA,WAAW,EAAEG,eAJjB;AAKI,cAAA,KAAK,EAAEzC,KALX;AAMI,cAAA,UAAU,EAAEsB,cANhB;AAOI,cAAA,YAAY,EAAEa;AAPlB;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eA4BI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,sBACK7B,UAAU,gBAAG,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAwB,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADvC;AAAA;AAAA;AAAA;AAAA,kBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAiCI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eAkCI,QAAC,gBAAD;AAAkB,UAAA,MAAM,EAAEjB,sBAA1B;AAAkD,UAAA,OAAO,EAAEqD,cAA3D;AACkB,UAAA,YAAY,EAAEC,gBADhC;AACkD,UAAA,aAAa,EAAC;AADhE;AAAA;AAAA;AAAA;AAAA,gBAlCJ,eAqCI,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEnD,mBAAvB;AAA4C,UAAA,OAAO,EAAEkD,cAArD;AACe,UAAA,UAAU,EAAES,oBAD3B;AACiD,UAAA,aAAa,EAAC;AAD/D;AAAA;AAAA;AAAA;AAAA,gBArCJ,eAwCI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC,0DAArB;AAAmC,UAAA,IAAI,EAAC,cAAxC;AAAuD,UAAA,OAAO,EAAET,cAAhE;AACe,UAAA,aAAa,EAAC;AAD7B;AAAA;AAAA;AAAA;AAAA,gBAxCJ,eA2CI,QAAC,eAAD;AAAiB,UAAA,MAAM,EAAEhD,qBAAzB;AAAgD,UAAA,OAAO,EAAEgD,cAAzD;AACiB,UAAA,cAAc,EAAEM,kBADjC;AACqD,UAAA,aAAa,EAAC;AADnE;AAAA;AAAA;AAAA;AAAA,gBA3CJ,eA8CI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAElD,YAAlB;AAAgC,UAAA,OAAO,EAAE4C;AAAzC;AAAA;AAAA;AAAA;AAAA,gBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH;;GA9OQvD,G;;KAAAA,G;AAgPT,qBAAevB,UAAU,CAACuB,GAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport RegisterButton from \"./RegisterButton\";\nimport LoginButton from \"./LoginButton\";\nimport {authorize, checkTokenValidity, register} from \"../utils/authorization\";\nimport AuthorizedHeader from \"./AuthorizedHeader\";\nimport InfoPopup from \"./InfoPopup\";\nimport stateOkImg from \"../images/ok.svg\"\nimport stateErrorImg from \"../images/not_ok.svg\"\n\nfunction App(props) {\n    const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupState] = React.useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n    const [isInfoPopupOpen, setInfoPopupState] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [cards, setCards] = React.useState([]);\n\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false); // признак авторизованности пользователя\n\n    const {history} = props;\n\n    React.useEffect(() => {\n        Promise.all([api.getInitialCards(), api.getUserInfo()]).then(([initialCards, userInfo]) => {\n            setCurrentUser(userInfo);\n            setCards(initialCards);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    /*React.useEffect(() => {\n        if (isLoggedIn) {\n            history.push(\"/\")\n        }\n    }, [isLoggedIn]);*/\n\n    React.useEffect(() => {\n        checkToken();\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (!isLiked) {\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.addLike(card._id).then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            }).catch((err) => {\n                console.log(err);\n            });\n        } else {\n            api.removeLike(card._id).then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            }).catch((err) => {\n                console.log(err);\n            });\n        }\n    }\n\n    function handleCardDelete(card) {\n        api.removeCard(card._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== card._id));\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupState(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupState(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupState(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupState(false);\n        setEditProfilePopupState(false);\n        setAddPlacePopupState(false);\n        setSelectedCard(null);\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.updateUserInfo(name, about).then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleUpdateAvatar({url}) {\n        api.changeAvatar(url).then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleAddPlaceSubmit({name, url}) {\n        api.addCard(name, url).then((item) => {\n            setCards([item, ...cards]);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleRegister(password, email) {\n        register(password, email).then(() => {\n            console.log('in register')\n            setIsLoggedIn(true);\n            choosingPopup(true);\n            setInfoPopupState(true);\n            // history.push(\"/\");\n        }).catch(() => {\n            console.log('in register')\n            choosingPopup(false);\n            setInfoPopupState(true);\n        });\n    }\n\n    function handleAuthorization(password, email) {\n        authorize(password, email).then((res) => {\n            setIsLoggedIn(true);\n            localStorage.setItem('token', res.token);\n            history.push(\"/\");\n        }).catch(() => {\n            choosingPopup(false);\n            setInfoPopupState(true);\n        })\n    }\n\n    function checkToken() {\n        const token = localStorage.getItem('token');\n        if (token) {\n            checkTokenValidity(token).then((res) => {\n                setEmail(res.data.email);\n                setIsLoggedIn(true);\n                history.push(\"/\");\n            }).catch(() => {\n                setIsLoggedIn(false);\n                history.push(\"/sign-in\");\n            })\n        }\n    }\n\n    function handleClick(path) {\n        history.push(`${path}`);\n    }\n\n    function handleLogout(path) {\n        handleClick(path);\n        setIsLoggedIn(false);\n        localStorage.removeItem('token');\n    }\n\n    function choosingPopup(state) {\n        console.log(typeof state)\n        if (state === true) {\n            RenderPopup (<InfoPopup isOpen={isInfoPopupOpen} src={stateOkImg} text=\"Вы успешно зарегистрировались!\"\n                               name=\"info-popup\" onClose={handleCloseInfotipPopup}/>);\n        } else {\n            RenderPopup (\n                <InfoPopup isOpen={isInfoPopupOpen} src={stateErrorImg}\n                           text=\"Что-то пошло не так! Попробуйте ещё раз.\"\n                           name=\"info-popup\" onClose={handleCloseInfotipPopup}/>);\n        }\n    }\n\n    function RenderPopup(component){\n        if(component){\n            console.log(111)\n        }\n    }\n\n    function handleCloseInfotipPopup(){\n        setInfoPopupState(false);\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <div className=\"root__container\">\n                    <Switch>\n                        <Route exact path=\"/sign-up\">\n                            <Header/>\n                            <RegisterButton path=\"/sign-in\" onClick={handleClick}/>\n                            <Register onHandleSubmit={handleRegister}/>\n                            <RenderPopup/>\n                        </Route>\n                        <Route exact path=\"/sign-in\">\n                            <Header/>\n                            <LoginButton path=\"/sign-up\" onClick={handleClick}/>\n                            <Login onHandleSubmit={handleAuthorization}/>\n                            <InfoPopup isOpen={isInfoPopupOpen} src={stateOkImg} text=\"Вы успешно зарегистрировались!\"\n                                       name=\"info-popup\"/>\n                        </Route>\n                        <ProtectedRoute\n                            path=\"/\"\n                            loggedIn={isLoggedIn}>\n                            <AuthorizedHeader email={email} path={\"/sign-in\"} onClick={handleLogout}/>\n                            <Main\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                onEditAvatar={handleEditAvatarClick}\n                                onCardClick={handleCardClick}\n                                cards={cards}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDelete}\n                            />\n                        </ProtectedRoute>\n                        <Route exact path=\"/\">\n                            {isLoggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/sign-in\"/>}\n                        </Route>\n                    </Switch>\n                    <Footer/>\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                                      onUpdateUser={handleUpdateUser} submitBtnName=\"Сохранить\"/>\n\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                                   onAddPlace={handleAddPlaceSubmit} submitBtnName=\"Создать\"/>\n\n                    <PopupWithForm title=\"Вы уверены?\" name=\"are_you-sure\" onClose={closeAllPopups}\n                                   submitBtnName=\"Сохранить\"/>\n\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                                     onUpdateAvatar={handleUpdateAvatar} submitBtnName=\"Сохранить\"/>\n\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}