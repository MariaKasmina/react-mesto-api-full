{"ast":null,"code":"var _jsxFileName = \"C:\\\\study projects\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport RegisterButton from \"./RegisterButton\";\nimport LoginButton from \"./LoginButton\";\nimport { authorize, checkTokenValidity, register } from \"../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState(null);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false); // признак авторизованности пользователя\n\n  const {\n    history\n  } = props;\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards(), api.getUserInfo()]).then(_ref => {\n      let [initialCards, userInfo] = _ref;\n      setCurrentUser(userInfo);\n      setCards(initialCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      history.push(\"/\");\n    }\n  }, [isLoggedIn]);\n  React.useEffect(() => {\n    checkToken();\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupState(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupState(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupState(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupState(false);\n    setEditProfilePopupState(false);\n    setAddPlacePopupState(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    api.updateUserInfo(name, about).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(_ref3) {\n    let {\n      url\n    } = _ref3;\n    api.changeAvatar(url).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      url\n    } = _ref4;\n    api.addCard(name, url).then(item => {\n      setCards([item, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleRegister(password, email) {\n    register(password, email).then(() => {\n      setIsLoggedIn(true);\n      history.push(\"/\");\n    });\n  }\n\n  function handleAuthorization(password, email) {\n    authorize(password, email).then(res => {\n      setIsLoggedIn(true);\n      localStorage.setItem('token', res.token);\n      history.push(\"/\");\n    });\n  }\n\n  function checkToken() {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      checkTokenValidity(token).then(res => {\n        if (res.ok) {\n          setIsLoggedIn(true);\n          setCurrentUser(prev => ({ ...prev,\n            email: res.email\n          }));\n          history.push(\"/\");\n        }\n      }).catch(() => {\n        setIsLoggedIn(false);\n        history.push(\"/sign-in\");\n      });\n    }\n\n    history.push(\"/sign-in\");\n  }\n\n  function handleClick(path) {\n    history.push(`${path}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root__container\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sign-up\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(RegisterButton, {\n              path: \"/sign-in\",\n              onClick: handleClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Register, {\n              onHandleSubmit: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sign-in\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Login, {\n              onHandleSubmit: handleAuthorization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: isLoggedIn,\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Main, {\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              cards: cards,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser,\n          submitBtnName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit,\n          submitBtnName: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          name: \"are_you-sure\",\n          onClose: closeAllPopups,\n          submitBtnName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar,\n          submitBtnName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"tE3VCRF591ZSXamqv8mYoxUgmsw=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/study projects/react-mesto-auth/src/components/App.js"],"names":["React","Redirect","Route","Switch","withRouter","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Register","Login","RegisterButton","LoginButton","authorize","checkTokenValidity","register","App","props","isEditProfilePopupOpen","setEditProfilePopupState","useState","isAddPlacePopupOpen","setAddPlacePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","history","useEffect","Promise","all","getInitialCards","getUserInfo","then","initialCards","userInfo","catch","err","console","log","push","checkToken","handleCardLike","card","isLiked","likes","some","i","_id","addLike","newCard","state","map","c","removeLike","handleCardDelete","removeCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","name","about","updateUserInfo","info","handleUpdateAvatar","url","changeAvatar","handleAddPlaceSubmit","addCard","item","handleRegister","password","email","handleAuthorization","res","localStorage","setItem","token","getItem","ok","prev","handleClick","path"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport RegisterButton from \"./RegisterButton\";\nimport LoginButton from \"./LoginButton\";\nimport {authorize, checkTokenValidity, register} from \"../utils/authorization\";\n\nfunction App(props) {\n    const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupState] = React.useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [cards, setCards] = React.useState([]);\n\n    const [currentUser, setCurrentUser] = React.useState(null);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false); // признак авторизованности пользователя\n\n    const {history} = props;\n\n    React.useEffect(() => {\n        Promise.all([api.getInitialCards(), api.getUserInfo()]).then(([initialCards, userInfo]) => {\n            setCurrentUser(userInfo);\n            setCards(initialCards);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    React.useEffect(() => {\n        if(isLoggedIn){\n            history.push(\"/\")\n        }\n    }, [isLoggedIn]);\n\n    React.useEffect(() => {\n        checkToken();\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (!isLiked) {\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.addLike(card._id).then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            }).catch((err) => {\n                console.log(err);\n            });\n        } else {\n            api.removeLike(card._id).then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            }).catch((err) => {\n                console.log(err);\n            });\n        }\n    }\n\n    function handleCardDelete(card) {\n        api.removeCard(card._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== card._id));\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupState(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupState(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupState(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupState(false);\n        setEditProfilePopupState(false);\n        setAddPlacePopupState(false);\n        setSelectedCard(null);\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.updateUserInfo(name, about).then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleUpdateAvatar({url}) {\n        api.changeAvatar(url).then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleAddPlaceSubmit({name, url}) {\n        api.addCard(name, url).then((item) => {\n            setCards([item, ...cards]);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleRegister(password, email) {\n        register(password, email).then(() => {\n            setIsLoggedIn(true);\n            history.push(\"/\");\n        })\n    }\n\n    function handleAuthorization(password, email) {\n        authorize(password, email).then((res) => {\n            setIsLoggedIn(true);\n            localStorage.setItem('token', res.token);\n            history.push(\"/\");\n        })\n    }\n\n    function checkToken() {\n        const token = localStorage.getItem('token');\n        if (token) {\n            checkTokenValidity(token).then((res) => {\n                if(res.ok) {\n                    setIsLoggedIn(true);\n                    setCurrentUser(prev => ({\n                        ...prev,\n                        email: res.email,\n                    }));\n                    history.push(\"/\");\n                }\n            }).catch(() => {\n                setIsLoggedIn(false);\n                history.push(\"/sign-in\");\n            })\n        }\n        history.push(\"/sign-in\");\n    }\n\n    function handleClick(path){\n        history.push(`${path}`);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <div className=\"root__container\">\n                    <Switch>\n                        <Route exact path=\"/sign-up\">\n                            <Header/>\n                            <RegisterButton path=\"/sign-in\" onClick={handleClick}/>\n                            <Register onHandleSubmit={handleRegister}/>\n                        </Route>\n                        <Route exact path=\"/sign-in\">\n                            <Header/>\n                            <LoginButton/>\n                            <Login onHandleSubmit={handleAuthorization}/>\n                        </Route>\n                        <ProtectedRoute\n                            path=\"/\"\n                            loggedIn={isLoggedIn}>\n                            <Header/>\n                            <Main\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                onEditAvatar={handleEditAvatarClick}\n                                onCardClick={handleCardClick}\n                                cards={cards}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDelete}\n                            />\n                        </ProtectedRoute>\n                        <Route exact path=\"/\">\n                            {isLoggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/sign-in\"/>}\n                        </Route>\n                    </Switch>\n                    <Footer/>\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                                      onUpdateUser={handleUpdateUser} submitBtnName=\"Сохранить\"/>\n\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                                   onAddPlace={handleAddPlaceSubmit} submitBtnName=\"Создать\"/>\n\n                    <PopupWithForm title=\"Вы уверены?\" name=\"are_you-sure\" onClose={closeAllPopups}\n                                   submitBtnName=\"Сохранить\"/>\n\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                                     onUpdateAvatar={handleUpdateAvatar} submitBtnName=\"Сохранить\"/>\n\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}